<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>IoT Data Dashboard</title>

  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.min.css" rel="stylesheet">

  <!-- FontAwesome for icons -->
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet">

  <!-- Custom Styles -->
  <style>
    body {
      background-color: #121212;
      color: #e0e0e0;
      font-family: 'Roboto', sans-serif;
      margin: 0;
      padding: 0;
    }

    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 40px;
    }

    h1 {
      font-size: 3.5em;
      font-weight: 700;
      color: #ffffff;
      text-align: center;
      margin-bottom: 50px;
    }

    .data-section {
      text-align: center;
      margin: 30px 0;
    }

    .data-label {
      font-size: 1.4em;
      font-weight: 500;
      color: #b0b0b0;
      margin-top: 15px;
    }

    .data-value {
      font-size: 2.5em;
      font-weight: 700;
    }

    .data-value.temp-blue {
      color: #007bff;
    }

    .data-value.temp-green {
      color: #28a745;
    }

    .data-value.temp-red {
      color: #d9534f;
    }

    .data-value.dist-red {
      color: #d9534f;
    }

    .data-value.dist-yellow {
      color: #ffc107;
    }

    .data-value.dist-green {
      color: #28a745;
    }

    .card {
      background-color: #1c1c1c;
      border-radius: 12px;
      box-shadow: 0 12px 20px rgba(0, 0, 0, 0.2);
      margin-bottom: 40px;
    }

    .card-header {
      background-color: #007bff;
      color: #fff;
      font-size: 1.25em;
      padding: 15px;
      text-align: center;
    }

    .card-body {
      padding: 40px;
      text-align: center;
      color: #fff;
    }

    .card-footer {
      background-color: #1a1a1a;
      color: #b0b0b0;
      padding: 15px;
      text-align: center;
      font-size: 0.9em;
    }

    /* Polished flood warning */
    .flood-warning-container {
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 10px 20px;
      border-radius: 8px;
      background-color: #fff;
      color: #333;
      margin-top: 30px;
      font-size: 1.2em;
      font-weight: 600;
      transition: all 0.3s ease;
      max-width: 500px; /* Limit the width of the container */
      margin: 0 auto; /* Center horizontally */
      height: 80px; /* Make the panel container shorter */
      overflow: hidden; /* Ensure content doesn't overflow */
    }

    .flood-warning-container.alert-danger {
      background-color: #f8d7da;
      color: #721c24;
      border-left: 5px solid #721c24;
    }

    .flood-warning-container.alert-success {
      background-color: #d4edda;
      color: #155724;
      border-left: 5px solid #155724;
    }

    .flood-warning-container i {
      margin-right: 15px;
    }

    /* Responsive design */
    @media (max-width: 767px) {
      h1 {
        font-size: 2.8em;
      }

      .data-section {
        margin: 20px;
      }

      .card-body {
        padding: 25px;
      }
    }
  </style>
</head>

<body>
  <div class="container">
    <h1>Real-Time IoT Data Monitoring</h1>

    <!-- Temperature and Distance Data Section -->
    <div class="row text-center">
      <!-- Temperature Data -->
      <div class="col-lg-6 col-md-6 col-sm-12 data-section">
        <p class="data-label"><i class="fas fa-thermometer-half"></i> Temperature (Â°C)</p>
        <p id="temperature" class="data-value">0</p>
      </div>

      <!-- Distance Data -->
      <div class="col-lg-6 col-md-6 col-sm-12 data-section">
        <p class="data-label"><i class="fas fa-ruler-horizontal"></i> Distance (cm)</p>
        <p id="distance" class="data-value">0</p>
      </div>
    </div>

    <!-- Flood Warning Section -->
    <div class="row">
      <div class="col-12">
        <div id="flood-warning" class="flood-warning-container">
          <i id="flood-icon" class="fas fa-check-circle"></i>
          <span id="flood-status">No Flood Risk</span>
        </div>
      </div>
    </div>
  </div>

  <!-- Bootstrap JS and dependencies -->
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.min.js"></script>

  <!-- Socket.io client script -->
  <script src="/socket.io/socket.io.js"></script>

  <!-- Custom JavaScript for updating the data -->
  <script>
    const socket = io();

    // Listen for new data from the server and update the values
    socket.on('newData', (data) => {
      const temperature = data.temperature;
      const distance = data.distance;
      const floodWarning = data.floodWarning;

      // Update temperature value and color
      const temperatureElement = document.getElementById('temperature');
      if (temperature < 20) {
        temperatureElement.textContent = temperature;
        temperatureElement.className = 'data-value temp-blue';
      } else if (temperature >= 20 && temperature <= 37) {
        temperatureElement.textContent = temperature;
        temperatureElement.className = 'data-value temp-green';
      } else {
        temperatureElement.textContent = temperature;
        temperatureElement.className = 'data-value temp-red';
      }

      // Update distance value and color
      const distanceElement = document.getElementById('distance');
      if (distance < 30) {
        distanceElement.textContent = distance;
        distanceElement.className = 'data-value dist-red';
      } else if (distance >= 30 && distance <= 50) {
        distanceElement.textContent = distance;
        distanceElement.className = 'data-value dist-yellow';
      } else {
        distanceElement.textContent = distance;
        distanceElement.className = 'data-value dist-green';
      }

      // Update flood warning status
      const floodWarningContainer = document.getElementById('flood-warning');
      const floodStatusElement = document.getElementById('flood-status');
      const floodIcon = document.getElementById('flood-icon');

      if (floodWarning) {
        floodStatusElement.textContent = "Flood Risk Detected!";
        floodWarningContainer.classList.add('alert-danger');
        floodWarningContainer.classList.remove('alert-success');
        floodIcon.classList.remove('fa-check-circle');
        floodIcon.classList.add('fa-exclamation-circle');
      } else {
        floodStatusElement.textContent = "No Flood Risk";
        floodWarningContainer.classList.add('alert-success');
        floodWarningContainer.classList.remove('alert-danger');
        floodIcon.classList.remove('fa-exclamation-circle');
        floodIcon.classList.add('fa-check-circle');
      }
    });
  </script>
</body>

</html>
